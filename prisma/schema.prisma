// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(uuid())
  clerkId   String   @unique // from Clerk
  username  String?
  email     String?
  avatar    String?
  posts     Post[]
  comments  Comment[]
  likes     Like[]
  createdAt DateTime @default(now())
}

model Post {
  id         String     @id @default(uuid())
  title      String
  content    String
  category   String
  state      PostState  @default(DRAFT)
  accessKey  String     @default(uuid())
  author     User       @relation(fields: [authorId], references: [id])
  authorId   String
  comments   Comment[]
  likes      Like[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
}

model Like {
  id        String   @id @default(uuid())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())

  @@unique([postId, userId]) // 1 like per user per post
}

enum PostState {
  DRAFT
  PUBLISHED
}